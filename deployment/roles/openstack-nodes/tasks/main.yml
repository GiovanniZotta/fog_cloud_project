--- 

- debug:
    msg: "Welcome in the {{ ansible_hostname }} machine!"

- name: get apollo-manager info
  os_user_info:
    auth: "{{ admin_auth_settings }}"
    name: apollo-manager
  register: manager

- debug:
    msg: "No project manager was found. Run openstack-setup.yml first"
  when: not manager.openstack_users

- name: End the host if project auth is not valid
  meta: end_host
  when: not manager.openstack_users

- name: Retrieve information about existing servers
  os_server_info:
    auth: "{{ project_auth_settings }}"
    server: apollo_server*
  register: servers

- name: Get ip addresses list
  set_fact:
    ip_list: "{{servers.openstack_servers | map(attribute=\"interface_ip\") | list}}"

- debug:
    var: ip_list

- debug:
    msg: "{{ item }}"
  with_items: "{{ ip_list }}"

- name: Add hosts to current inventory
  add_host:
    name: "{{ item }}"
    groups: instances
    ansible_host: "{{ item }}"
    ansible_user: ubuntu 
    ansible_ssh_private_key_file: "{{ ansible_ssh_private_key_file }}"
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ProxyCommand="ssh -W %h:%p -q iaas"'
  loop: "{{ ip_list }}"


# - name: Get last server name alphanumerically
#   set_fact: 
#     server_name: "{{ servers.openstack_servers | map(attribute=\"hostname\") | list | max if servers.openstack_servers else \"s0\"}}"

# - name: Get next available int
#   set_fact:
#     id: "{{ server_name | regex_replace('^.*(\\d)$', '\\1') | int + 1 }}"

# - debug:
#     var: id