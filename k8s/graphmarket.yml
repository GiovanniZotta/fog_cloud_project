#
# NAMESPACE
#
apiVersion: v1
kind: Namespace
metadata:
  name: graphmarket

#
# SECRET
#
---
apiVersion: v1
kind: Secret
type: Opaque
immutable: true
metadata:
  name: graphmarket-secret
  namespace: graphmarket
data:
  # postgres://postgres:password@database-svc:5432/graphmarket
  DATABASE_URL: cG9zdGdyZXM6Ly9wb3N0Z3JlczpwYXNzd29yZEBkYXRhYmFzZS1zdmM6NTQzMi9ncmFwaG1hcmtldA==
  APOLLO_KEY: c2VydmljZTpncmFwaG1hcmtldDpZNnBBRW1EbnVqNG93UGV6U3FiN0hB
  APOLLO_GRAPH_VARIANT: Y3VycmVudA==

#
# PERSISTENT VOLUME
#
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: database-pv
  namespace: graphmarket
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 4Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"

#
# PERSISTENT VOLUME CLAIM
#
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: database-pv-claim
  namespace: graphmarket
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 4Gi

#
# DEPLOYMENT
#
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: database-deployment
  namespace: graphmarket
spec:
  replicas: 1
  selector:
    matchLabels:
      app: database
  template:
    metadata:
      labels:
        app: database
    spec:
      containers:
        - name: database
          image: giovannizotta/graphmarket-database
          imagePullPolicy: Always
          ports:
            - containerPort: 5432
          #volumeMounts:
          #  - mountPath: /var/lib/postgresql/data
          #    name: database-pv-claim
          resources:
            limits:
              memory: 1Gi
              cpu: "1"
            requests:
              memory: 256Mi
              cpu: "0.25"
      #volumes:
      #  - name: database-pv-claim
      #    persistentVolumeClaim:
      #      claimName: database-pv-claim

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway-deployment
  namespace: graphmarket
spec:
  replicas: 3
  selector:
    matchLabels:
      app: gateway
  strategy: 
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: gateway
    spec:
      containers:
        - name: gateway
          image: giovannizotta/graphmarket-gateway
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          env:
            - name: APOLLO_KEY
              valueFrom:
                secretKeyRef:
                  name: graphmarket-secret
                  key: APOLLO_KEY
            - name: APOLLO_GRAPH_VARIANT
              valueFrom:
                secretKeyRef:
                  name: graphmarket-secret
                  key: APOLLO_GRAPH_VARIANT
          resources:
            limits:
              memory: 1Gi
              cpu: "1"
            requests:
              memory: 256Mi
              cpu: "0.25"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-products-deployment
  namespace: graphmarket
spec:
  replicas: 3
  selector:
    matchLabels:
      app: service-products
  strategy: 
    type: Recreate
  template:
    metadata:
      labels:
        app: service-products
    spec:
      containers:
        - name: service-products
          image: giovannizotta/graphmarket-svc-products
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: graphmarket-secret
                  key: DATABASE_URL
          resources:
            limits:
              memory: 1Gi
              cpu: "1"
            requests:
              memory: 256Mi
              cpu: "0.25"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-reviews-deployment
  namespace: graphmarket
spec:
  replicas: 3
  selector:
    matchLabels:
      app: service-reviews
  strategy: 
    type: Recreate
  template:
    metadata:
      labels:
        app: service-reviews
    spec:
      containers:
        - name: service-reviews
          image: giovannizotta/graphmarket-svc-reviews
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: graphmarket-secret
                  key: DATABASE_URL
          resources:
            limits:
              memory: 1Gi
              cpu: "1"
            requests:
              memory: 256Mi
              cpu: "0.25"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-inventories-deployment
  namespace: graphmarket
spec:
  replicas: 3
  selector:
    matchLabels:
      app: service-inventories
  strategy: 
    type: Recreate
  template:
    metadata:
      labels:
        app: service-inventories
    spec:
      containers:
        - name: service-inventories
          image: giovannizotta/graphmarket-svc-inventories
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: graphmarket-secret
                  key: DATABASE_URL
          resources:
            limits:
              memory: 1Gi
              cpu: "1"
            requests:
              memory: 256Mi
              cpu: "0.25"

#
# SERVICE
#
---
apiVersion: v1
kind: Service
metadata:
  name: database-svc
  namespace: graphmarket
spec:
  type: ClusterIP
  selector:
    app: database
  ports:
    - protocol: TCP
      port: 5432
---
apiVersion: v1
kind: Service
metadata:
  name: gateway-svc
  namespace: graphmarket
spec:
  type: NodePort
  selector:
    app: gateway
  ports:
    - protocol: TCP
      port: 80

---
apiVersion: v1
kind: Service
metadata:
  name: service-products-svc
  namespace: graphmarket
spec:
  type: ClusterIP
  selector:
    app: service-products
  ports:
    - protocol: TCP
      port: 80

---
apiVersion: v1
kind: Service
metadata:
  name: service-reviews-svc
  namespace: graphmarket
spec:
  type: ClusterIP
  selector:
    app: service-reviews
  ports:
    - protocol: TCP
      port: 80

---
apiVersion: v1
kind: Service
metadata:
  name: service-inventories-svc
  namespace: graphmarket
spec:
  type: ClusterIP
  selector:
    app: service-inventories
  ports:
    - protocol: TCP
      port: 80

#
# INGRESS
#
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gateway-ingress
  namespace: graphmarket
spec:
  rules:
    - http:
        paths:
          - path: /graphql
            pathType: Prefix
            backend:
              service:
                name: gateway-svc
                port:
                  number: 80
